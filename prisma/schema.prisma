generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  AMAZONE
}

model User {
  id        String     @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(AMAZONE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  simulations Simulation[]
  subscriptions Subscription[]
}

model Vehicle {
  id               String       @id @default(uuid())
  registration     String    @unique
  circulationDate  DateTime
  color            String
  seats            Int
  doors            Int
  categoryCode     String
  power            Int?
  valueNew         Float?
  valueVenal       Float?
  simulations      Simulation[]
  subscriptions    Subscription[]

  category        Category @relation(fields: [categoryCode], references: [code])
}

model Category {
  id          String @id @default(uuid())
  code        String @unique
  label       String
  description String
  vehicles     Vehicle[]
}

model Product {
  code        String   @id @default(uuid())
  name        String
  categories  String[]
  guarantees  String[]
  simulations Simulation[]
}


model Simulation {
  id            String @id @default(uuid())
  reference     String    @unique
  productCode   String
  vehicleId     String
  userId        String
  price         Float
  endDate       DateTime
  createdAt     DateTime  @default(now())
  subscription Subscription?

  product       Product   @relation(fields: [productCode], references: [code])
  vehicle       Vehicle   @relation(fields: [vehicleId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
}

model Subscription {
  id            String       @id @default(uuid())
  simulationId  String       @unique
  status        String    @default("PENDING")
  attestationId String?
  createdAt     DateTime  @default(now())
  userId        String
  vehicleId     String

  user          User      @relation(fields: [userId], references: [id])
  vehicle       Vehicle   @relation(fields: [vehicleId], references: [id])
  simulation    Simulation @relation(fields: [simulationId], references: [id])
}